// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Components/Entity.proto

#ifndef PROTOBUF_Components_2fEntity_2eproto__INCLUDED
#define PROTOBUF_Components_2fEntity_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace Entity {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Components_2fEntity_2eproto();
void protobuf_AssignDesc_Components_2fEntity_2eproto();
void protobuf_ShutdownFile_Components_2fEntity_2eproto();

class ComponentData;
class Entity;
class Entities;
class CreateEntity;

// ===================================================================

class ComponentData : public ::google::protobuf::Message {
 public:
  ComponentData();
  virtual ~ComponentData();

  ComponentData(const ComponentData& from);

  inline ComponentData& operator=(const ComponentData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ComponentData& default_instance();

  void Swap(ComponentData* other);

  // implements Message ----------------------------------------------

  ComponentData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ComponentData& from);
  void MergeFrom(const ComponentData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required bytes data = 2;
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 2;
  inline const ::std::string& data() const;
  inline void set_data(const ::std::string& value);
  inline void set_data(const char* value);
  inline void set_data(const void* value, size_t size);
  inline ::std::string* mutable_data();
  inline ::std::string* release_data();
  inline void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:Entity.ComponentData)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::std::string* data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Components_2fEntity_2eproto();
  friend void protobuf_AssignDesc_Components_2fEntity_2eproto();
  friend void protobuf_ShutdownFile_Components_2fEntity_2eproto();

  void InitAsDefaultInstance();
  static ComponentData* default_instance_;
};
// -------------------------------------------------------------------

class Entity : public ::google::protobuf::Message {
 public:
  Entity();
  virtual ~Entity();

  Entity(const Entity& from);

  inline Entity& operator=(const Entity& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Entity& default_instance();

  void Swap(Entity* other);

  // implements Message ----------------------------------------------

  Entity* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Entity& from);
  void MergeFrom(const Entity& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 entityID = 1;
  inline bool has_entityid() const;
  inline void clear_entityid();
  static const int kEntityIDFieldNumber = 1;
  inline ::google::protobuf::uint64 entityid() const;
  inline void set_entityid(::google::protobuf::uint64 value);

  // repeated .Entity.ComponentData components = 2;
  inline int components_size() const;
  inline void clear_components();
  static const int kComponentsFieldNumber = 2;
  inline const ::Entity::ComponentData& components(int index) const;
  inline ::Entity::ComponentData* mutable_components(int index);
  inline ::Entity::ComponentData* add_components();
  inline const ::google::protobuf::RepeatedPtrField< ::Entity::ComponentData >&
      components() const;
  inline ::google::protobuf::RepeatedPtrField< ::Entity::ComponentData >*
      mutable_components();

  // @@protoc_insertion_point(class_scope:Entity.Entity)
 private:
  inline void set_has_entityid();
  inline void clear_has_entityid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 entityid_;
  ::google::protobuf::RepeatedPtrField< ::Entity::ComponentData > components_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Components_2fEntity_2eproto();
  friend void protobuf_AssignDesc_Components_2fEntity_2eproto();
  friend void protobuf_ShutdownFile_Components_2fEntity_2eproto();

  void InitAsDefaultInstance();
  static Entity* default_instance_;
};
// -------------------------------------------------------------------

class Entities : public ::google::protobuf::Message {
 public:
  Entities();
  virtual ~Entities();

  Entities(const Entities& from);

  inline Entities& operator=(const Entities& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Entities& default_instance();

  void Swap(Entities* other);

  // implements Message ----------------------------------------------

  Entities* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Entities& from);
  void MergeFrom(const Entities& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Entity.Entity entities = 1;
  inline int entities_size() const;
  inline void clear_entities();
  static const int kEntitiesFieldNumber = 1;
  inline const ::Entity::Entity& entities(int index) const;
  inline ::Entity::Entity* mutable_entities(int index);
  inline ::Entity::Entity* add_entities();
  inline const ::google::protobuf::RepeatedPtrField< ::Entity::Entity >&
      entities() const;
  inline ::google::protobuf::RepeatedPtrField< ::Entity::Entity >*
      mutable_entities();

  // @@protoc_insertion_point(class_scope:Entity.Entities)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Entity::Entity > entities_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Components_2fEntity_2eproto();
  friend void protobuf_AssignDesc_Components_2fEntity_2eproto();
  friend void protobuf_ShutdownFile_Components_2fEntity_2eproto();

  void InitAsDefaultInstance();
  static Entities* default_instance_;
};
// -------------------------------------------------------------------

class CreateEntity : public ::google::protobuf::Message {
 public:
  CreateEntity();
  virtual ~CreateEntity();

  CreateEntity(const CreateEntity& from);

  inline CreateEntity& operator=(const CreateEntity& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateEntity& default_instance();

  void Swap(CreateEntity* other);

  // implements Message ----------------------------------------------

  CreateEntity* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateEntity& from);
  void MergeFrom(const CreateEntity& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Entity.ComponentData components = 2;
  inline int components_size() const;
  inline void clear_components();
  static const int kComponentsFieldNumber = 2;
  inline const ::Entity::ComponentData& components(int index) const;
  inline ::Entity::ComponentData* mutable_components(int index);
  inline ::Entity::ComponentData* add_components();
  inline const ::google::protobuf::RepeatedPtrField< ::Entity::ComponentData >&
      components() const;
  inline ::google::protobuf::RepeatedPtrField< ::Entity::ComponentData >*
      mutable_components();

  // @@protoc_insertion_point(class_scope:Entity.CreateEntity)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Entity::ComponentData > components_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Components_2fEntity_2eproto();
  friend void protobuf_AssignDesc_Components_2fEntity_2eproto();
  friend void protobuf_ShutdownFile_Components_2fEntity_2eproto();

  void InitAsDefaultInstance();
  static CreateEntity* default_instance_;
};
// ===================================================================


// ===================================================================

// ComponentData

// required string name = 1;
inline bool ComponentData::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ComponentData::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ComponentData::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ComponentData::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& ComponentData::name() const {
  return *name_;
}
inline void ComponentData::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ComponentData::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ComponentData::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ComponentData::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* ComponentData::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ComponentData::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required bytes data = 2;
inline bool ComponentData::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ComponentData::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ComponentData::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ComponentData::clear_data() {
  if (data_ != &::google::protobuf::internal::kEmptyString) {
    data_->clear();
  }
  clear_has_data();
}
inline const ::std::string& ComponentData::data() const {
  return *data_;
}
inline void ComponentData::set_data(const ::std::string& value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(value);
}
inline void ComponentData::set_data(const char* value) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(value);
}
inline void ComponentData::set_data(const void* value, size_t size) {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  data_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ComponentData::mutable_data() {
  set_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    data_ = new ::std::string;
  }
  return data_;
}
inline ::std::string* ComponentData::release_data() {
  clear_has_data();
  if (data_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = data_;
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ComponentData::set_allocated_data(::std::string* data) {
  if (data_ != &::google::protobuf::internal::kEmptyString) {
    delete data_;
  }
  if (data) {
    set_has_data();
    data_ = data;
  } else {
    clear_has_data();
    data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Entity

// required uint64 entityID = 1;
inline bool Entity::has_entityid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Entity::set_has_entityid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Entity::clear_has_entityid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Entity::clear_entityid() {
  entityid_ = GOOGLE_ULONGLONG(0);
  clear_has_entityid();
}
inline ::google::protobuf::uint64 Entity::entityid() const {
  return entityid_;
}
inline void Entity::set_entityid(::google::protobuf::uint64 value) {
  set_has_entityid();
  entityid_ = value;
}

// repeated .Entity.ComponentData components = 2;
inline int Entity::components_size() const {
  return components_.size();
}
inline void Entity::clear_components() {
  components_.Clear();
}
inline const ::Entity::ComponentData& Entity::components(int index) const {
  return components_.Get(index);
}
inline ::Entity::ComponentData* Entity::mutable_components(int index) {
  return components_.Mutable(index);
}
inline ::Entity::ComponentData* Entity::add_components() {
  return components_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Entity::ComponentData >&
Entity::components() const {
  return components_;
}
inline ::google::protobuf::RepeatedPtrField< ::Entity::ComponentData >*
Entity::mutable_components() {
  return &components_;
}

// -------------------------------------------------------------------

// Entities

// repeated .Entity.Entity entities = 1;
inline int Entities::entities_size() const {
  return entities_.size();
}
inline void Entities::clear_entities() {
  entities_.Clear();
}
inline const ::Entity::Entity& Entities::entities(int index) const {
  return entities_.Get(index);
}
inline ::Entity::Entity* Entities::mutable_entities(int index) {
  return entities_.Mutable(index);
}
inline ::Entity::Entity* Entities::add_entities() {
  return entities_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Entity::Entity >&
Entities::entities() const {
  return entities_;
}
inline ::google::protobuf::RepeatedPtrField< ::Entity::Entity >*
Entities::mutable_entities() {
  return &entities_;
}

// -------------------------------------------------------------------

// CreateEntity

// repeated .Entity.ComponentData components = 2;
inline int CreateEntity::components_size() const {
  return components_.size();
}
inline void CreateEntity::clear_components() {
  components_.Clear();
}
inline const ::Entity::ComponentData& CreateEntity::components(int index) const {
  return components_.Get(index);
}
inline ::Entity::ComponentData* CreateEntity::mutable_components(int index) {
  return components_.Mutable(index);
}
inline ::Entity::ComponentData* CreateEntity::add_components() {
  return components_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Entity::ComponentData >&
CreateEntity::components() const {
  return components_;
}
inline ::google::protobuf::RepeatedPtrField< ::Entity::ComponentData >*
CreateEntity::mutable_components() {
  return &components_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Entity

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Components_2fEntity_2eproto__INCLUDED
