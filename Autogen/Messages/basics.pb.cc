// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Messages/basics.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Messages/basics.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace BuiltIn {

namespace {

const ::google::protobuf::Descriptor* SetTimeScale_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SetTimeScale_reflection_ = NULL;
const ::google::protobuf::Descriptor* SystemRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SystemRequest_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* SystemRequest_RequestType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* SystemResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SystemResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* SystemResponse_ResponseType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* SystemResponse_ShutdownStatus_descriptor_ = NULL;
const ::google::protobuf::Descriptor* ChangeLogLevel_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ChangeLogLevel_reflection_ = NULL;
const ::google::protobuf::Descriptor* EmptyMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EmptyMessage_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_Messages_2fbasics_2eproto() {
  protobuf_AddDesc_Messages_2fbasics_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Messages/basics.proto");
  GOOGLE_CHECK(file != NULL);
  SetTimeScale_descriptor_ = file->message_type(0);
  static const int SetTimeScale_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetTimeScale, timescale_),
  };
  SetTimeScale_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SetTimeScale_descriptor_,
      SetTimeScale::default_instance_,
      SetTimeScale_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetTimeScale, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetTimeScale, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SetTimeScale));
  SystemRequest_descriptor_ = file->message_type(1);
  static const int SystemRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SystemRequest, request_),
  };
  SystemRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SystemRequest_descriptor_,
      SystemRequest::default_instance_,
      SystemRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SystemRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SystemRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SystemRequest));
  SystemRequest_RequestType_descriptor_ = SystemRequest_descriptor_->enum_type(0);
  SystemResponse_descriptor_ = file->message_type(2);
  static const int SystemResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SystemResponse, response_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SystemResponse, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SystemResponse, shutdownstatus_),
  };
  SystemResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SystemResponse_descriptor_,
      SystemResponse::default_instance_,
      SystemResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SystemResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SystemResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SystemResponse));
  SystemResponse_ResponseType_descriptor_ = SystemResponse_descriptor_->enum_type(0);
  SystemResponse_ShutdownStatus_descriptor_ = SystemResponse_descriptor_->enum_type(1);
  ChangeLogLevel_descriptor_ = file->message_type(3);
  static const int ChangeLogLevel_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeLogLevel, loglevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeLogLevel, includesystems_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeLogLevel, excludesystems_),
  };
  ChangeLogLevel_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ChangeLogLevel_descriptor_,
      ChangeLogLevel::default_instance_,
      ChangeLogLevel_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeLogLevel, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeLogLevel, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ChangeLogLevel));
  EmptyMessage_descriptor_ = file->message_type(4);
  static const int EmptyMessage_offsets_[1] = {
  };
  EmptyMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EmptyMessage_descriptor_,
      EmptyMessage::default_instance_,
      EmptyMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmptyMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmptyMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EmptyMessage));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Messages_2fbasics_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SetTimeScale_descriptor_, &SetTimeScale::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SystemRequest_descriptor_, &SystemRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SystemResponse_descriptor_, &SystemResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ChangeLogLevel_descriptor_, &ChangeLogLevel::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EmptyMessage_descriptor_, &EmptyMessage::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Messages_2fbasics_2eproto() {
  delete SetTimeScale::default_instance_;
  delete SetTimeScale_reflection_;
  delete SystemRequest::default_instance_;
  delete SystemRequest_reflection_;
  delete SystemResponse::default_instance_;
  delete SystemResponse_reflection_;
  delete ChangeLogLevel::default_instance_;
  delete ChangeLogLevel_reflection_;
  delete EmptyMessage::default_instance_;
  delete EmptyMessage_reflection_;
}

void protobuf_AddDesc_Messages_2fbasics_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\025Messages/basics.proto\022\007BuiltIn\"!\n\014SetT"
    "imeScale\022\021\n\ttimeScale\030\001 \002(\002\"x\n\rSystemReq"
    "uest\0223\n\007request\030\001 \002(\0162\".BuiltIn.SystemRe"
    "quest.RequestType\"2\n\013RequestType\022\r\n\tSHUT"
    "_DOWN\020\000\022\024\n\020SERIALIZED_STATE\020\001\"\306\002\n\016System"
    "Response\0226\n\010response\030\001 \002(\0162$.BuiltIn.Sys"
    "temResponse.ResponseType\022\r\n\005state\030\002 \001(\t\022"
    ">\n\016shutdownStatus\030\003 \001(\0162&.BuiltIn.System"
    "Response.ShutdownStatus\"q\n\014ResponseType\022"
    "\026\n\022SHUT_DOWN_RESPONSE\020\000\022\035\n\031SERIALIZED_ST"
    "ATE_RESPONSE\020\001\022\025\n\021LOG_LEVEL_CHANGED\020\002\022\023\n"
    "\017INVALID_REQUEST\020d\":\n\016ShutdownStatus\022\022\n\016"
    "CLEAN_SHUTDOWN\020\000\022\024\n\020UNCLEAN_SHUTDOWN\020\001\"R"
    "\n\016ChangeLogLevel\022\020\n\010logLevel\030\001 \001(\r\022\026\n\016in"
    "cludeSystems\030\002 \003(\t\022\026\n\016excludeSystems\030\003 \003"
    "(\t\"\016\n\014EmptyMessageB\002H\001", 622);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Messages/basics.proto", &protobuf_RegisterTypes);
  SetTimeScale::default_instance_ = new SetTimeScale();
  SystemRequest::default_instance_ = new SystemRequest();
  SystemResponse::default_instance_ = new SystemResponse();
  ChangeLogLevel::default_instance_ = new ChangeLogLevel();
  EmptyMessage::default_instance_ = new EmptyMessage();
  SetTimeScale::default_instance_->InitAsDefaultInstance();
  SystemRequest::default_instance_->InitAsDefaultInstance();
  SystemResponse::default_instance_->InitAsDefaultInstance();
  ChangeLogLevel::default_instance_->InitAsDefaultInstance();
  EmptyMessage::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Messages_2fbasics_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Messages_2fbasics_2eproto {
  StaticDescriptorInitializer_Messages_2fbasics_2eproto() {
    protobuf_AddDesc_Messages_2fbasics_2eproto();
  }
} static_descriptor_initializer_Messages_2fbasics_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int SetTimeScale::kTimeScaleFieldNumber;
#endif  // !_MSC_VER

SetTimeScale::SetTimeScale()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SetTimeScale::InitAsDefaultInstance() {
}

SetTimeScale::SetTimeScale(const SetTimeScale& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SetTimeScale::SharedCtor() {
  _cached_size_ = 0;
  timescale_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SetTimeScale::~SetTimeScale() {
  SharedDtor();
}

void SetTimeScale::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SetTimeScale::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetTimeScale::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SetTimeScale_descriptor_;
}

const SetTimeScale& SetTimeScale::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Messages_2fbasics_2eproto();
  return *default_instance_;
}

SetTimeScale* SetTimeScale::default_instance_ = NULL;

SetTimeScale* SetTimeScale::New() const {
  return new SetTimeScale;
}

void SetTimeScale::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    timescale_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SetTimeScale::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required float timeScale = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &timescale_)));
          set_has_timescale();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SetTimeScale::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required float timeScale = 1;
  if (has_timescale()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->timescale(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SetTimeScale::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required float timeScale = 1;
  if (has_timescale()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->timescale(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SetTimeScale::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required float timeScale = 1;
    if (has_timescale()) {
      total_size += 1 + 4;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetTimeScale::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SetTimeScale* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SetTimeScale*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SetTimeScale::MergeFrom(const SetTimeScale& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_timescale()) {
      set_timescale(from.timescale());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SetTimeScale::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetTimeScale::CopyFrom(const SetTimeScale& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetTimeScale::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void SetTimeScale::Swap(SetTimeScale* other) {
  if (other != this) {
    std::swap(timescale_, other->timescale_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SetTimeScale::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SetTimeScale_descriptor_;
  metadata.reflection = SetTimeScale_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* SystemRequest_RequestType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SystemRequest_RequestType_descriptor_;
}
bool SystemRequest_RequestType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const SystemRequest_RequestType SystemRequest::SHUT_DOWN;
const SystemRequest_RequestType SystemRequest::SERIALIZED_STATE;
const SystemRequest_RequestType SystemRequest::RequestType_MIN;
const SystemRequest_RequestType SystemRequest::RequestType_MAX;
const int SystemRequest::RequestType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int SystemRequest::kRequestFieldNumber;
#endif  // !_MSC_VER

SystemRequest::SystemRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SystemRequest::InitAsDefaultInstance() {
}

SystemRequest::SystemRequest(const SystemRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SystemRequest::SharedCtor() {
  _cached_size_ = 0;
  request_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SystemRequest::~SystemRequest() {
  SharedDtor();
}

void SystemRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SystemRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SystemRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SystemRequest_descriptor_;
}

const SystemRequest& SystemRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Messages_2fbasics_2eproto();
  return *default_instance_;
}

SystemRequest* SystemRequest::default_instance_ = NULL;

SystemRequest* SystemRequest::New() const {
  return new SystemRequest;
}

void SystemRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    request_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SystemRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .BuiltIn.SystemRequest.RequestType request = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::BuiltIn::SystemRequest_RequestType_IsValid(value)) {
            set_request(static_cast< ::BuiltIn::SystemRequest_RequestType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SystemRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .BuiltIn.SystemRequest.RequestType request = 1;
  if (has_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->request(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SystemRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .BuiltIn.SystemRequest.RequestType request = 1;
  if (has_request()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->request(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SystemRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .BuiltIn.SystemRequest.RequestType request = 1;
    if (has_request()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->request());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SystemRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SystemRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SystemRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SystemRequest::MergeFrom(const SystemRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_request()) {
      set_request(from.request());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SystemRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SystemRequest::CopyFrom(const SystemRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SystemRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void SystemRequest::Swap(SystemRequest* other) {
  if (other != this) {
    std::swap(request_, other->request_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SystemRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SystemRequest_descriptor_;
  metadata.reflection = SystemRequest_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* SystemResponse_ResponseType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SystemResponse_ResponseType_descriptor_;
}
bool SystemResponse_ResponseType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 100:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const SystemResponse_ResponseType SystemResponse::SHUT_DOWN_RESPONSE;
const SystemResponse_ResponseType SystemResponse::SERIALIZED_STATE_RESPONSE;
const SystemResponse_ResponseType SystemResponse::LOG_LEVEL_CHANGED;
const SystemResponse_ResponseType SystemResponse::INVALID_REQUEST;
const SystemResponse_ResponseType SystemResponse::ResponseType_MIN;
const SystemResponse_ResponseType SystemResponse::ResponseType_MAX;
const int SystemResponse::ResponseType_ARRAYSIZE;
#endif  // _MSC_VER
const ::google::protobuf::EnumDescriptor* SystemResponse_ShutdownStatus_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SystemResponse_ShutdownStatus_descriptor_;
}
bool SystemResponse_ShutdownStatus_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const SystemResponse_ShutdownStatus SystemResponse::CLEAN_SHUTDOWN;
const SystemResponse_ShutdownStatus SystemResponse::UNCLEAN_SHUTDOWN;
const SystemResponse_ShutdownStatus SystemResponse::ShutdownStatus_MIN;
const SystemResponse_ShutdownStatus SystemResponse::ShutdownStatus_MAX;
const int SystemResponse::ShutdownStatus_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int SystemResponse::kResponseFieldNumber;
const int SystemResponse::kStateFieldNumber;
const int SystemResponse::kShutdownStatusFieldNumber;
#endif  // !_MSC_VER

SystemResponse::SystemResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SystemResponse::InitAsDefaultInstance() {
}

SystemResponse::SystemResponse(const SystemResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SystemResponse::SharedCtor() {
  _cached_size_ = 0;
  response_ = 0;
  state_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  shutdownstatus_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SystemResponse::~SystemResponse() {
  SharedDtor();
}

void SystemResponse::SharedDtor() {
  if (state_ != &::google::protobuf::internal::kEmptyString) {
    delete state_;
  }
  if (this != default_instance_) {
  }
}

void SystemResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SystemResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SystemResponse_descriptor_;
}

const SystemResponse& SystemResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Messages_2fbasics_2eproto();
  return *default_instance_;
}

SystemResponse* SystemResponse::default_instance_ = NULL;

SystemResponse* SystemResponse::New() const {
  return new SystemResponse;
}

void SystemResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    response_ = 0;
    if (has_state()) {
      if (state_ != &::google::protobuf::internal::kEmptyString) {
        state_->clear();
      }
    }
    shutdownstatus_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SystemResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .BuiltIn.SystemResponse.ResponseType response = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::BuiltIn::SystemResponse_ResponseType_IsValid(value)) {
            set_response(static_cast< ::BuiltIn::SystemResponse_ResponseType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_state;
        break;
      }

      // optional string state = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_state:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_state()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->state().data(), this->state().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_shutdownStatus;
        break;
      }

      // optional .BuiltIn.SystemResponse.ShutdownStatus shutdownStatus = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_shutdownStatus:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::BuiltIn::SystemResponse_ShutdownStatus_IsValid(value)) {
            set_shutdownstatus(static_cast< ::BuiltIn::SystemResponse_ShutdownStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SystemResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .BuiltIn.SystemResponse.ResponseType response = 1;
  if (has_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->response(), output);
  }

  // optional string state = 2;
  if (has_state()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->state().data(), this->state().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->state(), output);
  }

  // optional .BuiltIn.SystemResponse.ShutdownStatus shutdownStatus = 3;
  if (has_shutdownstatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->shutdownstatus(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SystemResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .BuiltIn.SystemResponse.ResponseType response = 1;
  if (has_response()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->response(), target);
  }

  // optional string state = 2;
  if (has_state()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->state().data(), this->state().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->state(), target);
  }

  // optional .BuiltIn.SystemResponse.ShutdownStatus shutdownStatus = 3;
  if (has_shutdownstatus()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->shutdownstatus(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SystemResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .BuiltIn.SystemResponse.ResponseType response = 1;
    if (has_response()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->response());
    }

    // optional string state = 2;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->state());
    }

    // optional .BuiltIn.SystemResponse.ShutdownStatus shutdownStatus = 3;
    if (has_shutdownstatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->shutdownstatus());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SystemResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SystemResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SystemResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SystemResponse::MergeFrom(const SystemResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_response()) {
      set_response(from.response());
    }
    if (from.has_state()) {
      set_state(from.state());
    }
    if (from.has_shutdownstatus()) {
      set_shutdownstatus(from.shutdownstatus());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SystemResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SystemResponse::CopyFrom(const SystemResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SystemResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void SystemResponse::Swap(SystemResponse* other) {
  if (other != this) {
    std::swap(response_, other->response_);
    std::swap(state_, other->state_);
    std::swap(shutdownstatus_, other->shutdownstatus_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SystemResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SystemResponse_descriptor_;
  metadata.reflection = SystemResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ChangeLogLevel::kLogLevelFieldNumber;
const int ChangeLogLevel::kIncludeSystemsFieldNumber;
const int ChangeLogLevel::kExcludeSystemsFieldNumber;
#endif  // !_MSC_VER

ChangeLogLevel::ChangeLogLevel()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ChangeLogLevel::InitAsDefaultInstance() {
}

ChangeLogLevel::ChangeLogLevel(const ChangeLogLevel& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ChangeLogLevel::SharedCtor() {
  _cached_size_ = 0;
  loglevel_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ChangeLogLevel::~ChangeLogLevel() {
  SharedDtor();
}

void ChangeLogLevel::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ChangeLogLevel::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChangeLogLevel::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ChangeLogLevel_descriptor_;
}

const ChangeLogLevel& ChangeLogLevel::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Messages_2fbasics_2eproto();
  return *default_instance_;
}

ChangeLogLevel* ChangeLogLevel::default_instance_ = NULL;

ChangeLogLevel* ChangeLogLevel::New() const {
  return new ChangeLogLevel;
}

void ChangeLogLevel::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    loglevel_ = 0u;
  }
  includesystems_.Clear();
  excludesystems_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ChangeLogLevel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 logLevel = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &loglevel_)));
          set_has_loglevel();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_includeSystems;
        break;
      }

      // repeated string includeSystems = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_includeSystems:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_includesystems()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->includesystems(this->includesystems_size() - 1).data(),
            this->includesystems(this->includesystems_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_includeSystems;
        if (input->ExpectTag(26)) goto parse_excludeSystems;
        break;
      }

      // repeated string excludeSystems = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_excludeSystems:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_excludesystems()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->excludesystems(this->excludesystems_size() - 1).data(),
            this->excludesystems(this->excludesystems_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_excludeSystems;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ChangeLogLevel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional uint32 logLevel = 1;
  if (has_loglevel()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->loglevel(), output);
  }

  // repeated string includeSystems = 2;
  for (int i = 0; i < this->includesystems_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->includesystems(i).data(), this->includesystems(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->includesystems(i), output);
  }

  // repeated string excludeSystems = 3;
  for (int i = 0; i < this->excludesystems_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->excludesystems(i).data(), this->excludesystems(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->excludesystems(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ChangeLogLevel::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional uint32 logLevel = 1;
  if (has_loglevel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->loglevel(), target);
  }

  // repeated string includeSystems = 2;
  for (int i = 0; i < this->includesystems_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->includesystems(i).data(), this->includesystems(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->includesystems(i), target);
  }

  // repeated string excludeSystems = 3;
  for (int i = 0; i < this->excludesystems_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->excludesystems(i).data(), this->excludesystems(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->excludesystems(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ChangeLogLevel::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional uint32 logLevel = 1;
    if (has_loglevel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->loglevel());
    }

  }
  // repeated string includeSystems = 2;
  total_size += 1 * this->includesystems_size();
  for (int i = 0; i < this->includesystems_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->includesystems(i));
  }

  // repeated string excludeSystems = 3;
  total_size += 1 * this->excludesystems_size();
  for (int i = 0; i < this->excludesystems_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->excludesystems(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChangeLogLevel::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ChangeLogLevel* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ChangeLogLevel*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ChangeLogLevel::MergeFrom(const ChangeLogLevel& from) {
  GOOGLE_CHECK_NE(&from, this);
  includesystems_.MergeFrom(from.includesystems_);
  excludesystems_.MergeFrom(from.excludesystems_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_loglevel()) {
      set_loglevel(from.loglevel());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ChangeLogLevel::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChangeLogLevel::CopyFrom(const ChangeLogLevel& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangeLogLevel::IsInitialized() const {

  return true;
}

void ChangeLogLevel::Swap(ChangeLogLevel* other) {
  if (other != this) {
    std::swap(loglevel_, other->loglevel_);
    includesystems_.Swap(&other->includesystems_);
    excludesystems_.Swap(&other->excludesystems_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ChangeLogLevel::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ChangeLogLevel_descriptor_;
  metadata.reflection = ChangeLogLevel_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

EmptyMessage::EmptyMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void EmptyMessage::InitAsDefaultInstance() {
}

EmptyMessage::EmptyMessage(const EmptyMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void EmptyMessage::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EmptyMessage::~EmptyMessage() {
  SharedDtor();
}

void EmptyMessage::SharedDtor() {
  if (this != default_instance_) {
  }
}

void EmptyMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EmptyMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EmptyMessage_descriptor_;
}

const EmptyMessage& EmptyMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Messages_2fbasics_2eproto();
  return *default_instance_;
}

EmptyMessage* EmptyMessage::default_instance_ = NULL;

EmptyMessage* EmptyMessage::New() const {
  return new EmptyMessage;
}

void EmptyMessage::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool EmptyMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void EmptyMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* EmptyMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int EmptyMessage::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EmptyMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const EmptyMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const EmptyMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EmptyMessage::MergeFrom(const EmptyMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void EmptyMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EmptyMessage::CopyFrom(const EmptyMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EmptyMessage::IsInitialized() const {

  return true;
}

void EmptyMessage::Swap(EmptyMessage* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata EmptyMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EmptyMessage_descriptor_;
  metadata.reflection = EmptyMessage_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace BuiltIn

// @@protoc_insertion_point(global_scope)
